theme_classic(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g<-ggplot()
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
windowsFonts()
font_import()
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
windowsFonts()
loadfonts(device = "win", quiet = TRUE)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
font_import()
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
font_import(pattern="HARRYP_.ttf", prompt=FALSE)
font_import(pattern="Harry P.ttf", prompt=FALSE)
font_import(pattern="Harry P Regular.ttf", prompt=FALSE)
font_import(pattern="MagicSchoolTwo.ttf", prompt=FALSE)
font_import(pattern="Magic School Two Regular.ttf", prompt=FALSE)
font_import()
font_import(pattern="HARRYP_", prompt=FALSE)
font_import(paths=C:/Windows/Fonts,pattern="HARRYP_", prompt=FALSE)
font_import(paths="C:/Windows/Fonts",pattern="HARRYP_", prompt=FALSE)
font_import(paths="C:\Users\aggel\OneDrive\Documents\Data projects\Harry Potter french\harry_p font",pattern="HARRYP_", prompt=FALSE)
font_import(paths="C:/Users/aggel/OneDrive/Documents/Data projects/Harry Potter french/harry_p font",pattern="HARRYP_", prompt=FALSE)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="HARRYP_",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="HARRYP_",hjust = 0.5),
plot.subtitle = element_text(family="HARRYP_", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="HARRYP__",hjust = 0.5),
plot.subtitle = element_text(family="HARRYP__", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
loadfonts(device = "win", quiet = TRUE)
windowsFonts()
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter à l'École des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter a l'Ecole des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="New words per page", subtitle="Harry Potter a l'Ecole des Sorciers")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="goldenrod"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="firebrick"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="goldenrod"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.text.x = element_text(family="Harry P",size=12, colour="goldenrod"),
axis.text.y = element_text(family="Harry P",size=12, colour="goldenrod"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=12, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=12, colour="goldenrod"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="goldenrod"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank())+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="goldenrod"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.text.x = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.title.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.text.y = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="firebrick4"),
legend.title =element_text(family="Harry P",size=14, colour="goldenrod"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="goldenrod"),
legend.title =element_text(family="Harry P",size=14, colour="firebrick4"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)
ggsave(filename="New words per page in Harry Potter.png", plot=myPlot)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="goldenrod"),
legend.title =element_text(family="Harry P",size=14, colour="firebrick4"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)+
ggsave(filename="New words per page in Harry Potter.png", plot=myPlot)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="goldenrod"),
legend.title =element_text(family="Harry P",size=14, colour="firebrick4"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)+
ggsave(filename="New words per page in Harry Potter.png")
library(tidyverse)
raw_text <- read_file("data.txt") # read in the text file
per_chunk <- unlist(strsplit(raw_text, "=========="))  # seperate into chunks
# This function takes a chunk of character information
# and seperates it into lines.
seperate_into_lines <- function(chunk){
result <- stringr::str_split(chunk, "\r\n")
unlist(result)
}
# result <- seperate_into_lines(per_chunk[100])  # testing if this works
## you should put this into formal test frameworks such as testhat if you
## build a package.
# Extract title sentance and remove author
# This function presumes that you already extracted the raw data into
# character chunks.
extract_title <- function(linechunk){
# search for second line
titleline <- linechunk[2]
return <- gsub("\\(.*\\)", "", titleline) # it took me some
#time to work this regular expression out.
stringr::str_trim(return, side = "both") # remove whitespace at ends
}
#extract_title(result) # testcase to see if it works for me.
# Extract the author from chunk, this function looks
# very much like the one above, it uses the same logic.
extract_author <- function(linechunk){
# search for second line
titleline <- linechunk[2] # identical
author <- stringr::str_extract(titleline, "\\(.*\\)") # extract piece
return <- gsub("\\(|\\)", "", author)  #
stringr::str_trim(return, side = "both")
}
# extract_author(result)
# this function extracts all the pieces
# and subsequent functions will deal with the seperate stuff.
extract_type_location_date <- function(linechunk){
meta_row <- linechunk[3]
pieces <- stringr::str_split(meta_row, "\\|") # the literal character,
# the '|' has a special meaning in regexp.
unlist(pieces)
}
# extract_type_location_date(result) # test function
# extract page number by selecting first piece,
# trimming off of whitespace
# selecting a number, at least 1 times, followed by end of line.
extract_pagenumber <- function(pieces){
pieces[1] %>%
stringr::str_trim( side = "right") %>% # remove right end
stringr::str_extract("[0-9]{1,}$") %>%
as.numeric()
}
# extract_type_location_date(result) %>%
#     extract_pagenumber()
# Extract locations. Just like above.
extract_locations <- function(pieces){
pieces[2] %>%
stringr::str_trim( side = "both") %>%
stringr::str_extract("[0-9]{1,}-[0-9]{1,}$")
}
# extract_type_location_date(result) %>%
#     extract_locations()
# Extract date and convert to standard time, not US centric.
# I use the strptime from the base package here. The time is
# US-centric, but structured, so we can use the formatting from strptime.
# For example: %B is Full month name in the current locale
# and %I:%M %p means hours, minutes, am/pm.
extract_date <- function(pieces){
pieces[3] %>%
stringr::str_trim( side = "both") %>%
stringr::str_extract("[A-z]{3,} [0-9]{1,2}, [0-9]{4}, [0-9]{2}:[0-9]{2} [A-Z]{2}") %>%
strptime(format = "%B %e, %Y, %I:%M %p")
}
# Extract the highlight part.
extract_highlights <- function(linechunk){
linechunk[5]
}
# extract_highlights(result)
data <- data_frame(
author = character(length = length(per_chunk)),
title = character(length(per_chunk)),
location = character(length(per_chunk)),
pagenr = numeric(length(per_chunk)),
highlight = character(length(per_chunk))
)
# loop through all values
for( i in seq_along(per_chunk)){
hold <- per_chunk[i] %>% seperate_into_lines()
data$author[i] <- hold %>% extract_author()
data$title[i] <- hold %>% extract_title()
data$location[i] <- hold %>% extract_type_location_date() %>% extract_locations()
data$pagenr[i] <- hold %>% extract_type_location_date() %>% extract_pagenumber()
data$highlight[i] <- hold %>% extract_highlights()
}
data
library(tidyverse)
raw_text <- read_file("data.txt") # read in the text file
per_chunk <- unlist(strsplit(raw_text, "=========="))  # seperate into chunks
# This function takes a chunk of character information
# and seperates it into lines.
seperate_into_lines <- function(chunk){
result <- stringr::str_split(chunk, "\r\n")
unlist(result)
}
# result <- seperate_into_lines(per_chunk[100])  # testing if this works
## you should put this into formal test frameworks such as testhat if you
## build a package.
# Extract title sentance and remove author
# This function presumes that you already extracted the raw data into
# character chunks.
extract_title <- function(linechunk){
# search for second line
titleline <- linechunk[2]
return <- gsub("\\(.*\\)", "", titleline) # it took me some
#time to work this regular expression out.
stringr::str_trim(return, side = "both") # remove whitespace at ends
}
#extract_title(result) # testcase to see if it works for me.
# Extract the author from chunk, this function looks
# very much like the one above, it uses the same logic.
extract_author <- function(linechunk){
# search for second line
titleline <- linechunk[2] # identical
author <- stringr::str_extract(titleline, "\\(.*\\)") # extract piece
return <- gsub("\\(|\\)", "", author)  #
stringr::str_trim(return, side = "both")
}
# extract_author(result)
# this function extracts all the pieces
# and subsequent functions will deal with the seperate stuff.
extract_type_location_date <- function(linechunk){
meta_row <- linechunk[3]
pieces <- stringr::str_split(meta_row, "\\|") # the literal character,
# the '|' has a special meaning in regexp.
unlist(pieces)
}
# extract_type_location_date(result) # test function
# extract page number by selecting first piece,
# trimming off of whitespace
# selecting a number, at least 1 times, followed by end of line.
extract_pagenumber <- function(pieces){
pieces[1] %>%
stringr::str_trim( side = "right") %>% # remove right end
stringr::str_extract("[0-9]{1,}$") %>%
as.numeric()
}
# extract_type_location_date(result) %>%
#     extract_pagenumber()
# Extract locations. Just like above.
extract_locations <- function(pieces){
pieces[2] %>%
stringr::str_trim( side = "both") %>%
stringr::str_extract("[0-9]{1,}-[0-9]{1,}$")
}
# extract_type_location_date(result) %>%
#     extract_locations()
# Extract date and convert to standard time, not US centric.
# I use the strptime from the base package here. The time is
# US-centric, but structured, so we can use the formatting from strptime.
# For example: %B is Full month name in the current locale
# and %I:%M %p means hours, minutes, am/pm.
extract_date <- function(pieces){
pieces[3] %>%
stringr::str_trim( side = "both") %>%
stringr::str_extract("[A-z]{3,} [0-9]{1,2}, [0-9]{4}, [0-9]{2}:[0-9]{2} [A-Z]{2}") %>%
strptime(format = "%B %e, %Y, %I:%M %p")
}
# Extract the highlight part.
extract_highlights <- function(linechunk){
linechunk[5]
}
# extract_highlights(result)
data <- data_frame(
author = character(length = length(per_chunk)),
title = character(length(per_chunk)),
location = character(length(per_chunk)),
pagenr = numeric(length(per_chunk)),
highlight = character(length(per_chunk))
)
# loop through all values
for( i in seq_along(per_chunk)){
hold <- per_chunk[i] %>% seperate_into_lines()
data$author[i] <- hold %>% extract_author()
data$title[i] <- hold %>% extract_title()
data$location[i] <- hold %>% extract_type_location_date() %>% extract_locations()
data$pagenr[i] <- hold %>% extract_type_location_date() %>% extract_pagenumber()
data$highlight[i] <- hold %>% extract_highlights()
}
data
library(ggplot2)
library(tidyverse)
library(zoo)
library(extrafont)
library(cowplot)
dataav <-   data %>%
count(pagenr)
dataav$rolmean<- rollmean(dataav$n, 10, na.pad=TRUE)
g<-ggplot()
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="goldenrod"),
legend.title =element_text(family="Harry P",size=14, colour="firebrick4"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)+
ggsave(filename="New words per page in Harry Potter.png")
?ggsave
library(ggplot2)
library(tidyverse)
library(zoo)
dataav <-   data %>%
count(pagenr)
dataav$rolmean<- rollmean(dataav$n, 10, na.pad=TRUE)
g<-ggplot()
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="goldenrod"),
legend.title =element_text(family="Harry P",size=14, colour="firebrick4"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)+
ggsave(filename="New words per page in Harry Potter.png",width=300)
g+geom_bar(data=data,aes(x=pagenr,fill=..count..),stat="count",na.rm = TRUE)+
scale_fill_gradient(low = "firebrick1", high = "firebrick4")+
ggtitle(label="Harry Potter a l'Ecole des Sorciers", subtitle="New words per page")+
theme_classic()+
theme(plot.title = element_text(family="Harry P",hjust = 0.5,size=18,colour="goldenrod"),
plot.subtitle = element_text(family="Harry P", hjust = 0.5,size=20,colour="firebrick4"),
axis.title.x = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.x = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.title.y = element_text(family="Harry P",size=14, colour="firebrick4"),
axis.text.y = element_text(family="Harry P",size=14, colour="goldenrod"),
axis.line = element_blank(),
legend.text=element_text(family="Harry P",size=14, colour="goldenrod"),
legend.title =element_text(family="Harry P",size=14, colour="firebrick4"))+
labs(x="Page", y="Word count")+
geom_line(data=dataav, aes(pagenr,rolmean),na.rm = TRUE, colour="goldenrod",size=1.2)+
ggsave(filename="New words per page in Harry Potter.png",width=10)
